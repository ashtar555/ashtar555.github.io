<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>first</title>
      <link href="/2022/10/29/first/"/>
      <url>/2022/10/29/first/</url>
      
        <content type="html"><![CDATA[<p>第一次博客内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span><br><span class="line"></span><br><span class="line">const int N = 1e5+10;</span><br><span class="line">int a[N];</span><br><span class="line"></span><br><span class="line">void quick_sort(int q[], int l, int r)</span><br><span class="line">&#123;</span><br><span class="line">    if(l &gt;= r) return ;</span><br><span class="line">    int i = l-1, j = r+1, x = q[l+r &gt;&gt; 1];</span><br><span class="line">    while(i &lt; j)</span><br><span class="line">    &#123;#include &lt;iostream&gt;</span><br><span class="line">using namespace std;11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span><br><span class="line"></span><br><span class="line">const int N = 1e5+10;</span><br><span class="line">int a[N];</span><br><span class="line"></span><br><span class="line">void quick_sort(int q[], int l, int r)</span><br><span class="line">&#123;</span><br><span class="line">    if(l &gt;= r) return ;</span><br><span class="line">    int i = l-1, j = r+1, x = q[l+r &gt;&gt; 1];</span><br><span class="line">    while(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        do i ++; while(q[i] &lt; x);</span><br><span class="line">        do j --; while(q[j] &gt; x);</span><br><span class="line">        if(i &lt; j) swap(q[i],q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(q,l,j);</span><br><span class="line">    quick_sort(q,j+1,r);</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    quick_sort(a,1,n);</span><br><span class="line">    for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">        cout &lt;&lt; a[i];</span><br><span class="line">    return 0;</span><br><span class="line">&#125;#include &lt;iostream&gt;</span><br><span class="line">using namespace std;11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span><br><span class="line"></span><br><span class="line">const int N = 1e5+10;</span><br><span class="line">int a[N];</span><br><span class="line"></span><br><span class="line">void quick_sort(int q[], int l, int r)</span><br><span class="line">&#123;</span><br><span class="line">    if(l &gt;= r) return ;</span><br><span class="line">    int i = l-1, j = r+1, x = q[l+r &gt;&gt; 1];</span><br><span class="line">    while(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        do i ++; while(q[i] &lt; x);</span><br><span class="line">        do j --; while(q[j] &gt; x);</span><br><span class="line">        if(i &lt; j) swap(q[i],q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(q,l,j);</span><br><span class="line">    quick_sort(q,j+1,r);</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    quick_sort(a,1,n);</span><br><span class="line">    for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">        cout &lt;&lt; a[i];</span><br><span class="line">    return 0;</span><br><span class="line">&#125;#include &lt;iostream&gt;</span><br><span class="line">using namespace std;11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span><br><span class="line"></span><br><span class="line">const int N = 1e5+10;</span><br><span class="line">int a[N];</span><br><span class="line"></span><br><span class="line">void quick_sort(int q[], int l, int r)</span><br><span class="line">&#123;</span><br><span class="line">    if(l &gt;= r) return ;</span><br><span class="line">    int i = l-1, j = r+1, x = q[l+r &gt;&gt; 1];</span><br><span class="line">    while(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        do i ++; while(q[i] &lt; x);</span><br><span class="line">        do j --; while(q[j] &gt; x);</span><br><span class="line">        if(i &lt; j) swap(q[i],q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(q,l,j);</span><br><span class="line">    quick_sort(q,j+1,r);</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    quick_sort(a,1,n);</span><br><span class="line">    for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">        cout &lt;&lt; a[i];</span><br><span class="line">    return 0;</span><br><span class="line">&#125;#include &lt;iostream&gt;</span><br><span class="line">using namespace std;11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span><br><span class="line"></span><br><span class="line">const int N = 1e5+10;</span><br><span class="line">int a[N];</span><br><span class="line"></span><br><span class="line">void quick_sort(int q[], int l, int r)</span><br><span class="line">&#123;</span><br><span class="line">    if(l &gt;= r) return ;</span><br><span class="line">    int i = l-1, j = r+1, x = q[l+r &gt;&gt; 1];</span><br><span class="line">    while(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        do i ++; while(q[i] &lt; x);</span><br><span class="line">        do j --; while(q[j] &gt; x);</span><br><span class="line">        if(i &lt; j) swap(q[i],q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(q,l,j);</span><br><span class="line">    quick_sort(q,j+1,r);</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    quick_sort(a,1,n);</span><br><span class="line">    for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">        cout &lt;&lt; a[i];</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">        do i ++; while(q[i] &lt; x);</span><br><span class="line">        do j --; while(q[j] &gt; x);</span><br><span class="line">        if(i &lt; j) swap(q[i],q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(q,l,j);</span><br><span class="line">    quick_sort(q,j+1,r);</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    quick_sort(a,1,n);</span><br><span class="line">    for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">        cout &lt;&lt; a[i];</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">作者：衣谷金锋</span><br><span class="line">链接：https://www.acwing.com/activity/content/code/content/1947823/</span><br><span class="line">来源：AcWing</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/10/28/hello-world/"/>
      <url>/2022/10/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
